{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","pageNumbers","i","Math","ceil","push","isFirstPage","isLastPage","length","className","classNames","disabled","href","onClick","map","pageNumber","active","item","from","to","numbers","n","getNumbers","App","useState","itemsPerPage","setItemsPerPage","lastItemIndex","firstItemIndex","currentItems","slice","firstItem","trim","lastItem","console","log","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAU1C,IAJK,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAc,GAGXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKP,EAAQC,GAAUI,IAC/CD,EAAYI,KAAKH,GAGnB,IAAMI,EAA8B,IAAhBP,EACdQ,EAAaR,IAAgBE,EAAYO,OAE/C,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAAa,CAAEC,SAAUL,IAD3B,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,WACHd,EAAc,GAChBC,EAAaD,EAAc,IAPjC,oBAcDE,EAAYa,KAAI,SAAAC,GAAU,OACzB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQjB,IAAgBgB,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAREA,MAYT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUJ,IAD3B,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACHd,EAAcI,KAAKC,KAAKP,EAAQC,IAClCE,EAAaD,EAAc,IAPjC,uBAeJ,6BACGH,EAAMkB,KAAI,SAAAG,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjF5BrB,ECNC,SAAoBsB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOzB,EAAP,KAAoBC,EAApB,KACM2B,EAAgB5B,EAAc0B,EAC9BG,EAAiBD,EAAgBF,EACjCI,EAAejC,EAAMkC,MAAMF,EAAgBD,GAC3CI,EAAYF,EAAa,GAAGC,OAAO,GAAGE,OACtCC,EAAWJ,EAAaA,EAAarB,OAAS,GAAGsB,OAAO,GAAGE,OAKjE,OAFAE,QAAQC,IAAR,0BAA+BV,IAG7B,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiCgC,EADjC,cACgDE,EADhD,eAC+DrC,EAAMY,OADrE,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,MAAOZ,EACPa,SAAU,SAACC,GACTb,GAAiBa,EAAMC,OAAOH,OAC9BrC,EAAa,IAPjB,UAUE,wBAAQqC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOiC,EACPhC,MAAOD,EAAMY,OACbV,QAAS2B,EACT1B,YAAaA,EACbC,aAAcA,QEvDtB0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.80e07354.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  items: string[];\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: CallableFunction;\n}\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pageNumbers = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= Math.ceil(total / perPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageNumbers.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item', { disabled: isFirstPage },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageNumbers.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: currentPage === pageNumber },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item', { disabled: isLastPage },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => {\n              if (currentPage < Math.ceil(total / perPage)) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, onPageChange] = useState(1);\n  const lastItemIndex = currentPage * itemsPerPage;\n  const firstItemIndex = lastItemIndex - itemsPerPage;\n  const currentItems = items.slice(firstItemIndex, lastItemIndex);\n  const firstItem = currentItems[0].slice(-2).trim();\n  const lastItem = currentItems[currentItems.length - 1].slice(-2).trim();\n\n  // eslint-disable-next-line no-console\n  console.log(`items per Page: ${itemsPerPage}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              onPageChange(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={currentItems}\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}